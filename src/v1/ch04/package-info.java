/**
 * 对象与类:本章介绍了如何创建Java标准类库里的类对象，如何自定义类。
 * 
 * 面向对象程序设计概述
 * 	类：对象状态和方法的封装模板。
 * 	对象
 * 	识别类：先设计类(分析问题时寻找名词)，再往每个类添加属性和方法。
 * 	类之间的关系：依赖、聚合和继承。
 * 使用预定义类
 * 	对象与对象变量：对象存储在堆中。
 * 	Java类库中的GregorianCalendar类
 * 	更改器方法和访问器方法
 * 用户自定义类
 * 	Employee类
 * 	多个源文件的使用
 * 	剖析Employee类
 * 	从构造器开始
 * 	隐式参数与显式参数
 * 	封装的优点
 * 	基于类的访问权限
 * 	私有方法
 * 	final实例域
 * 静态域与静态方法
 * 	静态域：所有对象只有一个域，他属于类。
 * 	静态常量
 * 	静态方法
 * 	工厂方法：一个类产生不同的子类对象。
 * 	main方法：每一个类添加一个main方法可以用于单元测试.
 * 方法参数:按值调用,按引用调用.java总是采用按值调用.参数传递的是一份拷贝,修改内容或者地址无效.
 * 对象构造
 * 	重载
 * 	默认域初始化
 * 	无参数的构造器
 * 	显式域初始化
 * 	参数名
 * 	调用另一个构造器:构造器第一个语句调用this()
 * 	初始化块
 * 	对象析构与finalize方法
 * 包:用于组织类
 * 	类的导入
 * 	静态导入
 * 	将类放入包中:包中类的编译和运行
 * 	包作用域
 * 类路径
 * 文档注释
 * 	注释的插入
 * 	类注释
 * 	方法注释
 * 	域注释
 * 	通用注释
 * 	包与概述注释：package-info.java 或者package.html
 * 	注释的抽取
 * 类设计技巧
 * @author niu
 *
 */
package v1.ch04;